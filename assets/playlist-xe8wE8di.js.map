{"version":3,"file":"playlist-xe8wE8di.js","sources":["../../src/pages/playlist.vue"],"sourcesContent":["<template>\n    <div>\n        <div v-if=\"result.tracks && !loading\" key=\"playlst-content\">\n            <div id=\"playlistDetail\">\n                <img id=\"playlistImg\" :src=\"result.coverImgUrl\" v-if=\"result.coverImgUrl\">\n                <div id=\"playlistInfo\">\n                    <div id=\"playlistName\">{{ result.name }}</div>\n                    <div id=\"playlistAuthor\" v-if=\"result.creator\">\n                        <img id=\"playlistAuthorAvatar\" :src=\"result.creator.avatarUrl\">\n                        <div id=\"playlistAuthorName\">{{ result.creator.nickname }}</div>\n                        <span id=\"playlistTagContainer\">\n                            <n-tag v-for=\"item in result.tags\" type=\"success\" size=\"small\" class=\"playlistTag\">{{ item\n                                }}</n-tag>\n                        </span>\n                    </div>\n                    <div id=\"playlistDesc\">{{ result.description }}</div>\n                    <div id=\"playlistControler\">\n                        <n-button @click=\"playAll\">播放全部</n-button>\n                    </div>\n                </div>\n            </div>\n            <div id=\"playlistMusicList\">\n                <musicList :value=\"result.tracks\" :nameOnClick=\"play\" />\n            </div>\n        </div>\n        <div class=\"playlist-spin\" key=\"playlst-spin\" v-if=\"!result.tracks || loading\" >\n            <n-spin size=\"large\" />\n        </div>\n    </div>\n</template>\n\n<script setup name=\"playlist\">\nimport { ref, onMounted, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport * as api from '@/modules/api';\nimport musicList from '@/components/musicList.vue';\nimport { usePlayStore } from '@/stores/play';\nconst playStore = usePlayStore();\nconst router = useRouter();\nlet loading = ref(false);//点击播放后 解析播放列表的loading\nlet result = ref([]);\nlet props = defineProps(['id', 'isDailySongs']);\nwatch(props, () => {\n    console.log('playlist组件props被更新');\n    result.value = {};\n    parsePlayList();\n}, { deep: true })\nonMounted(() => {\n    console.log('playlist组件被挂载');\n    parsePlayList();\n})\nasync function parsePlayList() {\n    if (props.isDailySongs) {\n        let res = await api.recommendSongs();\n        let d = new Date;\n        result.value = {\n            tracks: res.data.data.dailySongs,\n            name: `${d.getMonth() + 1}/${d.getDate()} 每日推荐`,\n            description: `根据你的音乐口味生成，每天06:00更新`,\n            coverImgUrl: res.data.data.dailySongs[0].al.picUrl,\n            tags: ['每日推荐']\n        }\n\n    } else {\n        let res = await api.playlistDetail(props.id);\n        // console.log(res.data);\n        result.value = res.data.playlist;\n    }\n}\n\nasync function playAll() {\n    loading.value = true;\n    await playStore.playlistInit(null, result.value.tracks)\n    playStore.play(true);\n    router.push({ name: 'player' })\n    loading.value = false;\n}\nasync function play(id) {\n    loading.value = true;\n    await playStore.addMusic([id], 0, true);\n    playStore.play(true);\n    router.push({ name: 'player' })\n    loading.value = false;\n}\n</script>\n\n<style scoped>\n.playlist-spin {\n    width: 100%;\n    height: 70vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.playlistTag {\n    margin-left: 0.5rem;\n    margin-top: 0.5rem;\n    margin-bottom: 0.5rem;\n}\n\n#playlistDetail {\n    display: flex;\n    width: 100%;\n}\n\n#playlistImg {\n    width: 10rem;\n    border-radius: 0.8rem;\n    margin: 1rem;\n    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.2);\n}\n\n#playlistInfo {\n    margin-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n#playlistAuthor {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    margin-bottom: 0.5rem;\n}\n\n#playlistTagContainer {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#playlistAuthorName {\n    margin-left: 0.5rem;\n}\n\n#playlistAuthorAvatar {\n    width: 2rem;\n    border-radius: 1rem;\n    height: auto;\n}\n\n#playlistName {\n    font-size: 1.5rem;\n    padding-top: 1rem;\n    font-weight: 500;\n}\n\n#playlistDesc {\n    color: gray;\n}\n</style>"],"names":["playStore","usePlayStore","router","useRouter","loading","ref","result","props","__props","watch","parsePlayList","onMounted","res","api.recommendSongs","api.playlistDetail","playAll","play","id"],"mappings":"i3BAqCA,MAAMA,EAAYC,EAAY,EACxBC,EAASC,EAAS,EACxB,IAAIC,EAAUC,EAAI,EAAK,EACnBC,EAASD,EAAI,CAAA,CAAE,EACfE,EAAQC,EACZC,EAAMF,EAAO,IAAM,CACf,QAAQ,IAAI,oBAAoB,EAChCD,EAAO,MAAQ,GACfI,GACJ,EAAG,CAAE,KAAM,GAAM,EACjBC,EAAU,IAAM,CACZ,QAAQ,IAAI,eAAe,EAC3BD,GACJ,CAAC,EACD,eAAeA,GAAgB,CAC3B,GAAIH,EAAM,aAAc,CACpB,IAAIK,EAAM,MAAMC,IACZ,EAAI,IAAI,KACZP,EAAO,MAAQ,CACX,OAAQM,EAAI,KAAK,KAAK,WACtB,KAAM,GAAG,EAAE,SAAU,EAAG,CAAC,IAAI,EAAE,QAAS,CAAA,QACxC,YAAa,uBACb,YAAaA,EAAI,KAAK,KAAK,WAAW,CAAC,EAAE,GAAG,OAC5C,KAAM,CAAC,MAAM,CAChB,CAET,KAAW,CACH,IAAIA,EAAM,MAAME,EAAmBP,EAAM,EAAE,EAE3CD,EAAO,MAAQM,EAAI,KAAK,QAC3B,CACL,CAEA,eAAeG,GAAU,CACrBX,EAAQ,MAAQ,GAChB,MAAMJ,EAAU,aAAa,KAAMM,EAAO,MAAM,MAAM,EACtDN,EAAU,KAAK,EAAI,EACnBE,EAAO,KAAK,CAAE,KAAM,QAAQ,CAAE,EAC9BE,EAAQ,MAAQ,EACpB,CACA,eAAeY,EAAKC,EAAI,CACpBb,EAAQ,MAAQ,GAChB,MAAMJ,EAAU,SAAS,CAACiB,CAAE,EAAG,EAAG,EAAI,EACtCjB,EAAU,KAAK,EAAI,EACnBE,EAAO,KAAK,CAAE,KAAM,QAAQ,CAAE,EAC9BE,EAAQ,MAAQ,EACpB"}