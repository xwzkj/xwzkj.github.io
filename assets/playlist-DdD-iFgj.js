import{H as B,a5 as C,r as f,w as N,o as U,av as A,aw as L,I as l,J as i,V as s,K as a,R as r,U as c,L as M,M as V,Y as p,P as d,O as P,Q as m,_ as T}from"./index-CD6o7Giz.js";import{m as z,_ as O}from"./musicList-D9Ipn1y5.js";import{_ as R}from"./plugin-vueexport-helper-CvwgGIEE.js";import{B as $}from"./Button-CRBat-eq.js";import{_ as b}from"./Ellipsis-D0RNrsIL.js";import"./use-compitable-1C30C4GM.js";import"./heart-outlined-GiXK1MgB.js";import"./Card-Btc3FDva.js";import"./Follower-DLOt2EUa.js";import"./index-NoouIxdS.js";const E={key:"playlst-content"},F={class:"playlistDetail"},H=["src"],J={class:"playlistInfo"},K={class:"playlistName playlist-info-item"},Q={key:0,class:"playlistAuthor playlist-info-item"},Y=["src"],j={class:"playlistAuthorName"},q={class:"playlistTagContainer"},G={class:"playlist-desc playlist-info-item"},W={class:"playlistControler playlist-info-item"},X={id:"playlistMusicList"},Z={class:"playlist-spin",key:"playlst-spin"},tt={__name:"playlist",props:["id","isDailySongs"],setup(g){const n=B(),y=C();let o=f(!1),t=f([]),_=g;N(_,()=>{console.log("playlist组件props被更新"),t.value={},v()},{deep:!0}),U(()=>{console.log("playlist组件被挂载"),v()});async function v(){if(_.isDailySongs){let e=await A(),u=new Date;t.value={tracks:e.data.data.dailySongs,name:`${u.getMonth()+1}/${u.getDate()} 每日推荐`,description:"根据你的音乐口味生成，每天06:00更新",coverImgUrl:e.data.data.dailySongs[0].al.picUrl,tags:["每日推荐"]}}else{let e=await L(_.id);t.value=e.data.playlist}}async function h(){o.value=!0,await n.playlistInit(null,t.value.tracks),n.play(!0),y.push({name:"player"}),o.value=!1}async function k(e){o.value=!0,await n.addMusic([e],0,!0),n.play(!0),y.push({name:"player"}),o.value=!1}return(e,u)=>{const w=T,I=b,S=$,D=O;return l(),i("div",null,[s(t).tracks&&!s(o)?(l(),i("div",E,[a("div",F,[s(t).coverImgUrl?(l(),i("img",{key:0,class:"playlistImg",src:s(t).coverImgUrl},null,8,H)):r("",!0),a("div",J,[a("div",K,c(s(t).name),1),s(t).creator?(l(),i("div",Q,[a("img",{class:"playlistAuthorAvatar",src:s(t).creator.avatarUrl},null,8,Y),a("div",j,c(s(t).creator.nickname),1),a("span",q,[(l(!0),i(M,null,V(s(t).tags,x=>(l(),P(w,{type:"success",size:"small",class:"playlistTag"},{default:d(()=>[m(c(x),1)]),_:2},1024))),256))])])):r("",!0),a("div",G,[p(I,{style:{"max-width":"100%"},"line-clamp":3},{default:d(()=>[m(c(s(t).description),1)]),_:1})]),a("div",W,[p(S,{onClick:h},{default:d(()=>[m("播放全部")]),_:1})])])]),a("div",X,[p(z,{value:s(t).tracks,nameOnClick:k},null,8,["value"])])])):r("",!0),!s(t).tracks||s(o)?(l(),i("div",Z,[p(D,{size:"large"})])):r("",!0)])}}},_t=R(tt,[["__scopeId","data-v-42faa1fa"]]);export{_t as default};
